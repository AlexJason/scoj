extends layout/template.pug

block css
    link(rel='stylesheet', href='/css/util.css')
    link(rel='stylesheet', href='/css/problem.css')
    link(rel='stylesheet', href='/css/problem_difficulty.css')
    link(rel='stylesheet', href='/css/markdown.css')
    link(rel='stylesheet', data-name='vs/editor/editor.main', href='/monaco-editor/min/vs/editor/editor.main.css')

block js
    //script(src='/jquery/dist/jquery.min.js')
    //script(src='/katex/dist/katex.min.js')
    script(src='/markdown-it/dist/markdown-it.min.js')
    //script(src='/requirejs/require.js')
    script.
        var require = { paths: {
            'vs': '/monaco-editor/min/vs'
        }};
    script(src='/monaco-editor/min/vs/loader.js')
    script(src='/monaco-editor/min/vs/editor/editor.main.js')
    script(src='/monaco-editor/min/vs/editor/editor.main.nls.js')
    script.
        let markdownIt = markdownit();
        let markdownItLatex;

        let codeEditor = monaco.editor.create(document.getElementById('ide'), {
            value: [
                '#include <iostream>',
                '',
                'int main() {',
                '    return 0;',
                '}',
                ''
            ].join('\n'),
            language: 'cpp'
        });

        const supportedLanguage = {
            'cpp98': 'cpp',
            'cpp03': 'cpp',
            'cpp11': 'cpp',
            'cpp14': 'cpp',
            'cpp17': 'cpp',
            'cpp20': 'cpp',
            'js': 'javascript',
            'scratch': 'other'
        };

        const renderElementId = [
            'problem-background',
            'problem-description',
            'problem-input',
            'problem-output'
        ];

        function ideChangeLanguage(lang) {
            let langName = supportedLanguage[lang];
            if (langName != 'other') {
                monaco.editor.setModelLanguage(codeEditor.getModel(), langName)
            }
            else {
                // other IDE
            }
        }

        for (let item of renderElementId) {
            let ele = document.getElementById(item);
            ele.innerHTML = markdownIt.render(ele.innerHTML);
        }

block content
    div.problem-head.color-card
        p.problem-title #{problem.pid} #{problem.title}
    div.problem-info.color-card
        p.problem-info-title 题目背景
        div#problem-background #{problem.info.background}
        p.problem-info-title 题目描述
        div#problem-description #{problem.info.description}
        p.problem-info-title 输入格式
        div#problem-input #{problem.info.input}
        p.problem-info-title 输出格式
        div#problem-output #{problem.info.output}
        p.problem-info-title 输入输出样例
        - for (let i = 0; i < problem.info.sample.length; ++i)
            p.problem-info-subtitle 输入样例##{i + 1}
            p #{problem.info.sample[i].input}
            p.problem-info-subtitle 输出样例##{i + 1}
            p #{problem.info.sample[i].output}
    div.problem-upload.color-card
        p.problem-info-title 提交代码
        form(action='/api/v1/judge', method='post')
            input(type='hidden', name='type', value='text')
            select(name='lang', onchange='ideChangeLanguage(this.value)')
                option(value='cpp98') C++98
                option(value='cpp11') C++11
                option(value='cpp17') C++17
                option(value='cpp20') C++20
                option(value='js') JavaScript
                option(value='scratch3') Scratch 3
            div#ide.problem-ide
            input(type='submit')
        p.problem-info-title 提交文件
        form(action='/api/v1/judge', method='post', enctype='multipart/form-data')
            input(type='hidden', name='type', value='file')
            select(name='lang')
                option(value='cpp98') C++98
                option(value='cpp11') C++11
                option(value='cpp17') C++17
                option(value='cpp20') C++20
                option(value='js') JavaScript
                option(value='scratch3') Scratch 3
            div.util-button-file
                input(type='button', value='上传代码')
                input(type='file', name='file')
            input(type='submit')

